#include <bits/stdc++.h>

using namespace std;

int n,answer=10000000;
int arr[11][11];
int cnt;
int visited[11][11];
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};


int setflower(int x,int y)//꽃 놓기 
{
	visited[x][y]=1;
	int s=arr[x][y];
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		if(nx>=0 &&nx<n && ny>=0 && ny<n)
		{
			visited[nx][ny]=1;
			s+=arr[nx][ny];
		}
	}
	return s;
}
void eraseflower(int x,int y) //꽃 지우기 
{
	visited[x][y]=0;
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		
		visited[nx][ny]=0;
		
	}
}
int check(int x,int y)
{
	if(visited[x][y]==1)
	{
		return 0;
	}
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		
		if(nx<0 || ny<0 || nx>=n || ny>=n || visited[nx][ny])
		{
			return 0;
		}
	}
	return 1;
}


void flower(int cnt,int hap)
{
	if(cnt==3)
	{
	
		answer=min(answer,hap);
		return;
	}
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			if(check(i,j))
			{
				//printf("현재 %d %d\n",i,j);
				flower(cnt+1,hap+setflower(i,j));
				eraseflower(i,j);
			}
		}
	}
}

int main()
{
	cin>>n;
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>arr[i][j];
		}
	}

	flower(0,0);
	
	cout<<answer;
	
	
	return 0;
}
////////////////////////////////////////////////////////////
#include <bits/stdc++.h>

using namespace std;

int n;
int arr[11][11];
int tmp[11][11];
int visited[11][11];
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int answer=9999999;
vector<pair<int,int>> v;
vector<pair<int,int>> vv;

void solve(int size,int here)
{
	if(size==3)
	{
		memset(tmp,0,sizeof(tmp));
		int counting=0;
		int sum=0;
		for(int i=0;i<vv.size();i++)
		{
			int x=vv[i].first;
			int y=vv[i].second;
			tmp[x][y]=1;
			
			for(int i=0;i<4;i++)
			{
				int nx=x+dx[i];
				int ny=y+dy[i];
				
				if(nx>=0 && ny>=0 && nx<n && ny<n)
				{
					tmp[nx][ny]=1;
				}
			}
		}
		
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(tmp[i][j]==1)
				{
					counting++;
					sum+=arr[i][j];
				}
			}
		}
		if(counting==15)
		{
			answer=min(answer,sum);
		}
	
		return;
	}
	
	for(int i=here;i<v.size();i++)
	{
		vv.push_back({v[i].first,v[i].second});
		solve(size+1,i+1);
		vv.pop_back();
	}
}

int main()
{
	cin>>n;
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>arr[i][j];
			v.push_back({i,j});
		}
	}
	
	
	solve(0,0);
	
	cout<<answer;
	
	return 0;
}
