#include <bits/stdc++.h>

using namespace std;

char arr[301][301];
int n,m;
int visited[301][301];
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int sign;
int answer;

void dfs(int x,int y,int tmp)
{
	visited[x][y]=tmp;
	//cout<<x<<" "<<y<<"\n";
	
	if(arr[x][y]=='#')
	{
		cout<<tmp;
		sign=1;
		return;
	}
	if(arr[x][y]=='1')
	{
		arr[x][y]='0';
		return;
	}
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		
		if(nx>=0 && nx<n && ny>=0 &&ny<m)
		{
			if(visited[nx][ny]!=tmp)
			{
				dfs(nx,ny,tmp);
			}
		}
	}
}

int main()
{
	int a,b,c,d;
	cin>>n>>m;
	cin>>a>>b>>c>>d;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			cin>>arr[i][j];
		}
	}
	
	arr[a-1][b-1]='0';
	
	for(int i=1;;i++)
	{
		dfs(a-1,b-1,i);
		
		if(sign==1)
		{
			break;
		}
	}
	
	
	
	return 0;
}

//////////////////////////////////////////////////////
#include <bits/stdc++.h>

using namespace std;

int n,m;
int a,b,c,d;
char arr[301][301];
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int visited[301][301];
int answer;
string s;
int main()
{
	cin>>n>>m;
	cin>>a>>b>>c>>d;
	
	for(int i=0;i<n;i++)
	{
		cin>>s;
		for(int j=0;j<m;j++)
		{
			arr[i][j]=s[j];
		}
	}
	
	queue <pair<int,int>> q;
	q.push({a-1,b-1});
	visited[a-1][b-1]=1;
	
	while(visited[c-1][d-1]==0)
	{
		queue <pair<int,int>> tmp;
		answer++;
		
		while(q.size())
		{
			int x=q.front().first;
			int y=q.front().second;
			q.pop();
			
			for(int i=0;i<4;i++)
			{
				int nx=x+dx[i];
				int ny=y+dy[i];
				
				if(nx>=0 && ny>=0 && nx<n && ny<m && visited[nx][ny]==0)
				{
					if(arr[nx][ny]!='0')
					{
						arr[nx][ny]='0';
						visited[nx][ny]=visited[x][y]+1;
						tmp.push({nx,ny});
					}
					else
					{
						q.push({nx,ny});
						visited[nx][ny]=visited[x][y]+1;
					}
				}
			}	
		}
		q=tmp;
		
		
	}
	cout<<answer;
	
	return 0;
}
