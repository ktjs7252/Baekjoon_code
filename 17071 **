#include<iostream>
#include<string>
#include<vector>
#include<queue>
using namespace std;

int N, K;
int visit[2][500001];

int sum(int n)
{
	return n * (n + 1) / 2;
}

int main(void)
{

	cin >> N >> K;


	queue<pair<int, int> > su;
	su.push({ N,0 });
	visit[0][N] = 0;
	memset(visit, -1, sizeof(visit));

	while (!su.empty())
	{
		int cur = su.front().first;
		int t = su.front().second;
		su.pop();

		if (cur > 500000 || cur < 0)
		{
			continue;
		}

		if (visit[t % 2][cur] != -1)
		{
			continue;
		}

		visit[t % 2][cur] = t;
		su.push({ cur - 1,t + 1 });
		su.push({ cur + 1,t + 1 });
		su.push({ 2 * cur , t + 1 });
	}

	for (int i = 0; i < 500000; i++)
	{
		int nk = K + sum(i);
		if (nk > 500000)
		{
			break;
		}

		if (visit[i % 2][nk] != -1 && visit[i % 2][nk] <= i)
		{
			
			cout << i << endl;
			return 0;
		}
	}
	cout << -1 << endl;

	return 0;//정상종료시 반드시 0을 리턴해야합니다.
}
