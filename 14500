#include <stdio.h>
#include <string.h>
#pragma warning(disable:4996)
#define max(a, b) (((a) > (b)) ? (a) : (b))

int n, m;
int arr[501][501];
int visited[501][501];
int answer;
int dx[] = { -1,0,1,0 };
int dy[] = { 0,-1,0,1 };

void go(int x, int y, int tmp,int size)
{
	if (tmp == 4)
	{
		answer = max(answer, size);

		return;
	}
	visited[x][y] = 1;
	for (int i = 0; i < 4; i++)
	{
		int nx = x + dx[i];
		int ny = y + dy[i];

		/*if (nx < 0 || ny < 0 || nx >= n || ny >= n) continue;
		if (visited[nx][ny] == 1) continue;

		go(nx, ny, tmp + 1, size + arr[nx][ny]);
		visited[nx][ny] = 0;*/
	

		if (nx >= 0 && ny >= 0 && nx < n && ny < m && visited[nx][ny]==0)
		{
			go(nx, ny, tmp + 1, size + arr[nx][ny]);
			visited[nx][ny] = 0;
		}
	}
}

void solve1(int x, int y)
{
	int sum = 0;
	sum = arr[x][y] + arr[x + 1][y] + arr[x + 2][y] + arr[x + 1][y + 1];
	answer = max(answer, sum);
}

void solve2(int x, int y)
{
	int sum = 0;
	sum = arr[x][y] + arr[x - 1][y-1] + arr[x + 1][y] + arr[x + 2][y + 1];
	answer = max(answer, sum);
}

void solve3(int x, int y)
{
	int sum = 0;
	sum = arr[x][y] + arr[x - 1][y-1] + arr[x][y+1] + arr[x][y + 2];
	answer = max(answer, sum);
}

void solve4(int x, int y)
{
	int sum = 0;
	sum = arr[x][y] + arr[x][y+1] + arr[x][y+2] + arr[x + 1][y + 1];
	answer = max(answer, sum);
}

int main()
{
	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			scanf("%d", &arr[i][j]);
		}
	}

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			memset(visited, 0, sizeof(visited));
			go(i, j,1,arr[i][j]);
			if (i + 2 < n && j + 1 < n) solve1(i, j);
			if (i + 1 < n && i - 1 >0 && i + 1 < n) solve2(i, j);
			if (i - 1 > 0 && i + 2 < n) solve3(i, j);
			if (i + 1 < n && i + 2 < n) solve4(i, j);
		}
	}

	printf("%d", answer);

	return 0;
}
