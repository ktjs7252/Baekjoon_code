(2178)

#include <bits/stdc++.h>

using namespace std;

int n,m;
int arr[101][101];
int visited[101][101];
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};

int main()
{
	cin>>n>>m;
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			scanf("%1d",&arr[i][j]);
		}
	}
	
	queue <pair<int,int>> q;
	q.push({0,0});
	visited[0][0]=1;
	
	while(q.size())
	{
		int x=q.front().first;
		int y=q.front().second;
		q.pop();
		
		for(int i=0;i<4;i++)
		{
			int nx=x+dx[i];
			int ny=y+dy[i];
			
			if(nx<0 || nx>=n || ny<0 ||ny>=m) continue;
			if(visited[nx][ny]) continue;
			if(arr[x][y]==1){
			
			q.push({nx,ny});
			visited[nx][ny]=visited[x][y]+1;
		}
		}
	}
	
	cout<<visited[n-1][m-1];
	return 0;
}
----------------------------------------------------------
(1012)
#include <bits/stdc++.h>

using namespace std;

int arr[51][51];
int visited[51][51];
int text_case,m,n,k;
int a,b;
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};

void dfs(int x,int y)
{
	visited[x][y]=1;
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		if(nx>=0 && nx<m && ny>=0 && ny<n)
		{
			if(visited[nx][ny]==0 && arr[nx][ny]==1)
			{
				dfs(nx,ny);
			}
		}
	}
	
}
int main()
{
	cin>>text_case;
	
	for(int i=0;i<text_case;i++)
	{
		cin>>m>>n>>k;
		memset(arr,0,sizeof(arr));
		memset(visited,0,sizeof(visited));
		
		for(int j=0;j<k;j++)
		{
			cin>>a>>b;
			arr[a][b]=1;
		}
		
		int counting=0;
		
		for(int x=0;x<m;x++)
		{
			for(int y=0;y<n;y++)
			{
				if(visited[x][y]==0 && arr[x][y]==1)
				{
					dfs(x,y);
					counting++;
				}
			}
		}
		
		cout<<counting<<"\n";
		
	}
	
	
	
	
	
	return 0;
}
-----------------------------
(2468)
#include <bits/stdc++.h>

using namespace std;

int arr[101][101];
int tmp[101][101];
int visited[101][101];
int n;
int answer;
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int max_t;
void dfs(int x,int y)
{
	visited[x][y]=1;
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		
		if(nx>=0 && nx<n && ny>=0 && ny<n)
		{
			if(visited[nx][ny]==0 && tmp[nx][ny]==0)
			{
				dfs(nx,ny);
			}
		}
	}
}

int main()
{
	cin>>n;
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>arr[i][j];
			max_t=max(max_t,arr[i][j]);
		}
	}
	
	int answer=0;
	
	for(int t=0;t<max_t;t++)
	{
		memset(visited,0,sizeof(visited));
		memset(tmp,0,sizeof(tmp));
		
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(arr[i][j]<=t)
				{
					tmp[i][j]=1;
				}
			}
		}
		
		int counting=0;
		
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(visited[i][j]==0 &&tmp[i][j]==0)
				{
					dfs(i,j);
					counting++;
				}
			}
		}
		
		answer=max(answer,counting);
		
	}
	
	cout<<answer;
	return 0;
}
----------------------------------------------------------------------------
(2583)
#include <bits/stdc++.h>

using namespace std;

int m,n,k;
int arr[101][101];
int visited[101][101];
int counting;
int answer[101];
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int tmp;
int dfs(int x,int y)
{
	visited[x][y]=1;
	tmp++;
	
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		
		if(nx>=0 && nx<m && ny>=0 &&ny<n)
		{
			if(visited[nx][ny]==0 && arr[nx][ny]==0)
			{
				dfs(nx,ny);
			}
		}
	}
	return tmp;
}

int main()
{
	cin>>m>>n>>k;
	int a,b,c,d;
	for(int i=0;i<k;i++)
	{
		cin>>a>>b>>c>>d;
		
		for(int x=b;x<d;x++)
		{
			for(int y=a;y<c;y++)
			{
				arr[x][y]=1;
			}
		}
	}
	for(int x=0;x<m;x++)
	{
		for(int y=0;y<n;y++)
		{
			if(visited[x][y]==0 && arr[x][y]==0)
			{
				tmp=0;
				answer[counting++]=dfs(x,y);
			}		
		}
    }
	sort(answer,answer+counting);
	cout<<counting<<"\n";
	for(int i=0;i<counting;i++)
	{
		cout<<answer[i]<<" ";
	}
	
	
	return 0;
}








