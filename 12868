#include <bits/stdc++.h>
using namespace std;
int tmp[6][3] = {
	{9, 3, 1}, 
	{9, 1, 3}, 
	{3, 1, 9}, 
	{3, 9, 1}, 
	{1, 3, 9}, 
	{1, 9, 3}
};
int n;
int arr[3];
int visited[64][64][64];
int dp[64][64][64];
struct pos{
	int a,b,c;
};
queue<pos> q;

int solve(int a,int b,int c)
{
	q.push({a,b,c});
	visited[a][b][c]=1;
	
	while(!q.empty())
	{
		int a = q.front().a; 
        int b = q.front().b; 
        int c = q.front().c; 
        q.pop();
        if(visited[0][0][0]) break;
        for(int i = 0; i < 6; i++){
            int na = max(0, a - tmp[i][0]);
            int nb = max(0, b - tmp[i][1]); 
            int nc = max(0, c - tmp[i][2]); 
            if(visited[na][nb][nc]) continue;
            visited[na][nb][nc] = visited[a][b][c] + 1;  
            q.push({na, nb, nc}); 
        }
        
	}
	return visited[0][0][0]-1;
}

int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	cout<<solve(arr[0],arr[1],arr[2]);
	return 0;
	
}
