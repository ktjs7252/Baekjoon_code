#include <bits/stdc++.h>

using namespace std;

int m,n;
int dx[]={-1,0,1,0};
int dy[]={0,-1,0,1};
int a[101][101];
int visited[101][101];
int x;
int finally;

void dfs(int x,int y)
{
	int nx,ny;
	visited[x][y]=1;
	
	for(int i=0;i<4;i++)
	{
		nx=x+dx[i];
		ny=y+dy[i];
		
		if(nx>=0 && nx<m && ny>=0 && ny<n)
		{
			if(a[nx][ny]==1)
			{
				a[nx][ny]=2;
			}
			if(a[nx][ny]==0 && visited[nx][ny]==0)
			{
				dfs(nx,ny);
			}
		}
	}
}


int main()
{
	cin>>m>>n;
	
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>a[i][j];
			if(a[i][j]==1)
			{
				finally++;
			}
		}
	}
	//반복 
	// 전체를 바깥쪽에 닿은 1을 2로 바꿔줌 
	//2를 1로 바꿔줌 
	while(1)
	{	
		int sign=1;
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(a[i][j]!=0)
				{
					sign=0;
					break;
				}
			}
		}
		if(sign==1)
		{
			break;
		}
		
		memset(visited,0,sizeof(visited));
		int tmp=0;
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(a[i][j]==1)
				{
					tmp++;
				}
			}
		}
		finally=tmp;
		dfs(0,0); //return 0 ??
		x++;
		
		
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(a[i][j]==2)
				{
					a[i][j]=0;
				}
			}
		}
	
		//finally=tmp;
		
	}
	cout<<x<<"\n";
	cout<<finally<<"\n";
	
	
	return 0;
}
